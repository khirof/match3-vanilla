@import url('https://fonts.googleapis.com/css?family=Roboto:700&display=swap');

/****************************************************/
/*　                    定数                        */
/****************************************************/
:root {
  --base-color: #d7dae5;
  --base-color-rgb: 215,218,229;

  /* Primary palette (original values) */
  --red-color: #fa4b8a;
  --yellow-color: #ffa30d;
  --green-color: #6ec25a;
  --blue-color: #0da7fd;
  --purple-color: #c34ef9;

  --shadow-color1: #868890;
  --shadow-color1-rgb: 134,136,144;
  --highlight-color1: #f3f3f3;
  --highlight-color1-rgb: 243,243,243;
  --shadow-color2: #a7a9b3;
  --purewhite-color: #ffffff;
  --textshadow-color: #666870;
  /* Removed legacy Y-gap variables; use --board-shift-y instead */
  --board-width: 630px;
  --board-height: 630px;
  --board-shift-y: 20px; /* +/- shift relative to vertical center */
  --score-top-margin: 200px;
  --score-width: 250px;
  --score-text-size: 32px;
  --score-translateX: 0px;
  --match-top-margin: 60px;
  --match-translateX: 45px;
  --match-font-size: 80px;
  --match-letter-space: 80px;
  --match-ani-interval: 1s;
  --font-family: Roboto, Arial, Sans-serif;
  --wave-main-col: #4973ff66;
  --wave-water-dark: rgba(39, 74, 196, 0.9);

  /* Wave/button specific variables */
  --wave-grad-start: rgba(194,196,206,1);
  --wave-grad-end: rgba(230,233,245,1);
  --wave-text-color: rgba(255,255,255,0.47);
  --wave-shadow-dark: rgba(134,136,144,0.95);
  --wave-shadow-light: rgba(255,255,255,0.92);

  /* Start/Menu shared geometry */
  --start-base-width: 300px;
  --start-base-height: 100px;
  --start-pressed-delta-w: -3px;
  --start-pressed-delta-h: -1px;
  --start-width: var(--start-base-width);
  --start-height: var(--start-base-height);
  --menu-gap: 105px;

  /* Menu specific sizing */  
  --menu-scale: 0.85; /* 70% of Start height */
  --menu-size: calc(var(--start-height) * var(--menu-scale));

  /* Circular timer positioning */
  --timer-top-margin: 170px;
  --timer-translateX: -250px;
  --timer-size: 100px;
  /* Timer specific colors (separate from wave colors) */
  --timer-water-color: rgba(73, 115, 255, 0.22);

  /* Safe-area and UI offsets */
  --ui-top-base: 0px;
  --ui-bottom-base: 50px;
  --ui-top-offset: calc(max(env(safe-area-inset-top, 0px), var(--ui-top-base)));
  --ui-bottom-offset: calc(max(env(safe-area-inset-bottom, 0px), var(--ui-bottom-base)));

}


/****************************************************/
/*　                    ボディ                       */
/****************************************************/
/*ブラウザのデフォルトの色反転を無効化*/
::selection {
  background-color: transparent;
}

/*非表示化。使うのピースだけかもだから、ここじゃないほうがいいかも*/
.hide {
  display: none;
}

body {
  display: flex;
  flex-direction: column;
  justify-content: flex-start; /* 画面最上部寄せにするために変更 */
  align-items: center;
  background-color: var(--base-color);
  padding: 0;
}

/* Center-anchored board container */
#board {
  position: fixed;
  left: 50%;
  top: calc(50% + var(--board-shift-y));
  transform: translate(-50%, -50%) scale(var(--board-scale, 1));
  width: var(--board-width);
  height: var(--board-height);
  transform-origin: center center;
  z-index: 2;
}

/* Scaled HUD (top) container */
#hud-top {
  position: fixed;
  left: 50%;
  top: var(--ui-top-offset);
  transform: translateX(-50%) scale(var(--board-scale, 1));
  transform-origin: top center;
  width: var(--board-width);
  z-index: 6;
}

/* remove hud-left anchor */

/****************************************************/
/*                  Circular Timer                   */
/****************************************************/
#circular-timer {
  position: absolute;
  top: var(--timer-top-margin);
  left: 50%;
  transform: translate(calc(-50% + var(--timer-translateX)), 0);
  width: var(--timer-size);
  height: var(--timer-size);
}

/* circular container: neutral shell (no raised look) */
#circular-timer {
  border-radius: 50%;
  background: var(--base-color);
  box-shadow: none;
  overflow: hidden;
}

/* inner fill holder: debossed (inset) look */
#circular-timer .ct-fill {
  position: absolute;
  inset: 4px;
  border-radius: 50%;
  background: var(--base-color);
  overflow: hidden;
  box-shadow:
    inset 5px 5px 5px var(--shadow-color2),
    inset -5px -5px 5px var(--highlight-color1);
  z-index: 1;
}

/* simple water rectangle */
#circular-timer .ct-water {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  height: 0%;
  z-index: 1;
  background: var(--timer-water-color);
  box-shadow: inset 0 1px 0 rgba(255,255,255,0.10);
}

#circular-timer .ct-label {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: var(--font-family);
  font-weight: 900;
  color: #1f2436;
  text-shadow: 0 1px 0 rgba(255,255,255,0.6);
  z-index: 2;
  pointer-events: none;
}

#circular-timer #ct-seconds {
  font-size: 36px;
}

/* Scaled controls (bottom) container */
#controls {
  position: fixed;
  left: 50%;
  bottom: var(--ui-bottom-offset);
  transform: translateX(-50%) scale(var(--board-scale, 1));
  transform-origin: bottom center;
  width: var(--board-width);
  z-index: 6;
}

/* When Start is visually pressed, mirror its width/height to keep Menu synced */
body:has(.wave.clicked) {
  --start-width: calc(var(--start-base-width) + var(--start-pressed-delta-w));
  --start-height: calc(var(--start-base-height) + var(--start-pressed-delta-h));
}

/****************************************************/
/*　                 Menu Button                     */
/****************************************************/
.menu-button {
  appearance: none;
  position: absolute; /* align within same containing context as Start */
  height: var(--menu-size);
  width: var(--menu-size);
  border: none;
  border-radius: 50%;
  cursor: pointer;
  font-size: calc(var(--menu-size) * 0.45);
  line-height: 1;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  font-family: var(--font-family);
  /* Debossed gear icon: bright hover style applied by default */
  color: var(--base-color);
  text-shadow: -1px -1px 0 var(--purewhite-color), 1px 1px 0 var(--textshadow-color);
  background: linear-gradient(145deg, var(--wave-grad-start), var(--wave-grad-end));
  background-color: var(--wave-main-col);
  box-shadow:
    12px 12px 24px var(--wave-shadow-dark),
    -10px -10px 20px var(--wave-shadow-light);
  transition: box-shadow 0.2s ease, transform 0.02s ease;
}
.menu-button {
  /* Align with Start (.wave) inside #controls */
  bottom: calc((var(--start-height) - var(--menu-size)) / 2);
  left: calc(50% + (var(--start-width) / 2) + var(--menu-gap));
  transform: translate(-50%, 0);
  top: auto;
  z-index: 5;
}
.menu-button:hover {
  box-shadow:
    12px 12px 24px var(--wave-shadow-dark),
    -10px -10px 20px var(--wave-shadow-light);
  /* No visual change; same as default */
}
.menu-button:active {
  background: var(--base-color);
  background-color: var(--base-color);
  box-shadow:
    inset 4px 4px 8px var(--wave-shadow-dark),
    inset -3px -3px 6px var(--wave-shadow-light);
}

#top-cover { display: none; }

/****************************************************/
/*　                 Table                          */
/****************************************************/
#table {
  overflow: hidden;
  width: calc(var(--board-width) - (var(--board-inner-padding, 0px) * 2));
  height: calc(var(--board-height) - (var(--board-inner-padding, 0px) * 2));
  table-layout: fixed;
  border-collapse: collapse;
  border-spacing: 0;
  margin: var(--board-inner-padding, 0px);
}


/****************************************************/
/*　           Table/テーブルの影                    */
/****************************************************/
table {
  position: relative;
  z-index: 2; /* table要素が上に来るようにz-indexを設定 */
  top: 0;  /* ボードと厳密に一致させる */
  border-collapse: collapse;
  border-spacing: 0;
}
#center-score {
  z-index: 5; /* above table(2) and top-cover(3), below overlay(100) */
}

#shape {
  position: absolute; /* positionをabsoluteに戻す */
  top: 0; 
  left: 50%;
  width: var(--board-width);
  height: var(--board-height);
  transform: translateX(-50%);
  background-color: var(--base-color);
  border-radius: 40px;
  box-shadow: inset 13px 13px 13px var(--shadow-color2),
              inset -13px -13px 13px var(--highlight-color1);
  z-index: 1; /* shape要素が下に来るようにz-indexを設定 */
}

/****************************************************/
/*　                全体オーバーレイ                  */
/****************************************************/
#overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.75);
  opacity: 0;
  pointer-events: none;
  animation-play-state: paused;
  z-index: 100;
}
  
  @keyframes fadeIn {
	0% {
	  opacity: 0;
	}
	100% {
	  opacity: 1;
	}
  }
  
  #overlay.fadeIn {
	animation: fadeIn 1s forwards ease-out;
  }

/****************************************************/
/*　                ゲームオーバー                   */
/****************************************************/
.gameOverContainer {
	width: 100%;
	font-weight: 900;
	text-align: center;
  z-index: -1;
  position: absolute; 
  padding-top: 350px; 
}

.animate span {
	display: inline-block;
}
.animate span:nth-of-type(1) {
	animation-delay: .2s;
}
.animate span:nth-of-type(2) {
	animation-delay: 1.4s;
}
.animate span:nth-of-type(3) {
	animation-delay: .4s;
}
.animate span:nth-of-type(4) {
	animation-delay: .8s;
}
.animate span:nth-of-type(5) {
	animation-delay: 1.0s;
}
.animate span:nth-of-type(6) {
	animation-delay: 1.6s;
}
.animate span:nth-of-type(7) {
	animation-delay: 1.2s;
}
.animate span:nth-of-type(8) {
	animation-delay: .6s;
}


/* Animation Four */


.four span {
	color: #8d6a00;
	opacity: 0;
	transform: translate(0, -100px) rotate(360deg) scale(0);
	animation: revolveDrop .8s forwards;
	text-shadow: 0 0 2px #ffa500, 0 0 5px #ffa500, 0 0 7px #ffa500, 0 0 13px #ffa500, 0 0 20px #ff0000, 0 0 3px #ff8d00, 0 0 20px #ff0000;
 	color: #fff6a9;
  font-family: cursive; 
  text-align: center;
	font-size: 64px;
	letter-spacing: 10px;
	animation-play-state: paused;
	pointer-events: none;
}



@keyframes revolveDrop {
	30% {
		transform: translate(0, -50px) rotate(180deg) scale(1);
	}

	60% {
		transform: translate(0, 20px) scale(.8) rotate(0deg);
	}

	100% {
		transform: translate(0) scale(1) rotate(0deg);
		opacity: 1;
	}
}

